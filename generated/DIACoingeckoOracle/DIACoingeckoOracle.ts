// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OracleUpdate extends ethereum.Event {
  get params(): OracleUpdate__Params {
    return new OracleUpdate__Params(this);
  }
}

export class OracleUpdate__Params {
  _event: OracleUpdate;

  constructor(event: OracleUpdate) {
    this._event = event;
  }

  get key(): string {
    return this._event.parameters[0].value.toString();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UpdaterAddressChange extends ethereum.Event {
  get params(): UpdaterAddressChange__Params {
    return new UpdaterAddressChange__Params(this);
  }
}

export class UpdaterAddressChange__Params {
  _event: UpdaterAddressChange;

  constructor(event: UpdaterAddressChange) {
    this._event = event;
  }

  get newUpdater(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DIACoingeckoOracle__getValueResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class DIACoingeckoOracle extends ethereum.SmartContract {
  static bind(address: Address): DIACoingeckoOracle {
    return new DIACoingeckoOracle("DIACoingeckoOracle", address);
  }

  getValue(key: string): DIACoingeckoOracle__getValueResult {
    let result = super.call("getValue", "getValue(string):(uint128,uint128)", [
      ethereum.Value.fromString(key)
    ]);

    return new DIACoingeckoOracle__getValueResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getValue(
    key: string
  ): ethereum.CallResult<DIACoingeckoOracle__getValueResult> {
    let result = super.tryCall(
      "getValue",
      "getValue(string):(uint128,uint128)",
      [ethereum.Value.fromString(key)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DIACoingeckoOracle__getValueResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  values(param0: string): BigInt {
    let result = super.call("values", "values(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_values(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("values", "values(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetValueCall extends ethereum.Call {
  get inputs(): SetValueCall__Inputs {
    return new SetValueCall__Inputs(this);
  }

  get outputs(): SetValueCall__Outputs {
    return new SetValueCall__Outputs(this);
  }
}

export class SetValueCall__Inputs {
  _call: SetValueCall;

  constructor(call: SetValueCall) {
    this._call = call;
  }

  get key(): string {
    return this._call.inputValues[0].value.toString();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetValueCall__Outputs {
  _call: SetValueCall;

  constructor(call: SetValueCall) {
    this._call = call;
  }
}

export class UpdateOracleUpdaterAddressCall extends ethereum.Call {
  get inputs(): UpdateOracleUpdaterAddressCall__Inputs {
    return new UpdateOracleUpdaterAddressCall__Inputs(this);
  }

  get outputs(): UpdateOracleUpdaterAddressCall__Outputs {
    return new UpdateOracleUpdaterAddressCall__Outputs(this);
  }
}

export class UpdateOracleUpdaterAddressCall__Inputs {
  _call: UpdateOracleUpdaterAddressCall;

  constructor(call: UpdateOracleUpdaterAddressCall) {
    this._call = call;
  }

  get newOracleUpdaterAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateOracleUpdaterAddressCall__Outputs {
  _call: UpdateOracleUpdaterAddressCall;

  constructor(call: UpdateOracleUpdaterAddressCall) {
    this._call = call;
  }
}
